# def insertion_sort(arr):
#     for i in range(1, len(arr)):
#         key = arr[i]
#         j = i - 1
#         while j >= 0 and arr[j] > key:
#             arr[j + 1] = arr[j]
#             j -= 1
#         arr[j + 1] = key
#     return arr

# print(insertion_sort([5, 2, 9, 1, 5, 6]))

# def insertion_sort(arr):
#      for i in range(1, len(arr)):
#          key = arr[i]
#          j = i - 1
#          while j >= 0 and arr[j] > key:
#              arr[j + 1] = arr[j]
#              j -= 1
#          arr[j + 1] = key
#      return arr

# print(insertion_sort([5, 2, 9, 1, 5, 6]))
# print("")
# def insertion_sort(arr):
#      for i in range(1, len(arr)):
#          key = arr[i]
#          j = i - 1
#          while j >= 0 and arr[j] > key:
#              arr[j + 1] = arr[j]
#              j -= 1
#          arr[j + 1] = key
#      return arr

# print(insertion_sort([51, 6, 46, 39, 84]))
# print("")
# def insertion_sort(arr):
#      for i in range(1, len(arr)):
#          key = arr[i]
#          j = i - 1
#          while j >= 0 and arr[j] > key:
#              arr[j + 1] = arr[j]
#              j -= 1
#          arr[j + 1] = key
#      return arr

# print(insertion_sort([64, 43, 5, 83, 18]))
# print("")
# def insertion_sort(arr):
#      for i in range(1, len(arr)):
#          key = arr[i]
#          j = i - 1
#          while j >= 0 and arr[j] > key:
#              arr[j + 1] = arr[j]
#              j -= 1
#          arr[j + 1] = key
#      return arr

# print(insertion_sort([46, 7, 43, 95, 9]))

def fn_merge_sort(listNumber):
    if len(listNumber) > 1:
        mid = len(listNumber) // 2
        left_half = listNumber[:mid:]
        right_half = listNumber[:mid:]

        fn_merge_sort(left_half)
        fn_merge_sort(right_half)

        i = j = k = 0

        while i < len(left_half) and j < len(right_half):
            if left_half[i] < right_half[j]:
                listNumber[k] = left_half[i]
                i += 1
            else:
                listNumber[k] = right_half[j]
                j += 1
            k += 1
        while i < len(left_half):
            listNumber = left_half[i]
            i += 1
            k += 1

        while j < len(right_half):
            listNumber[k] = right_half[j]
            j += 1
            k += 1
