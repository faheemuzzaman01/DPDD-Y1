def fn_binary_search(listnumber, searchValue):
    left = 0
    right = len(listnumber) - 1
    while left <= right:
        mid = (left+right) // 2
        if listnumber[mid] == searchValue:
            return mid
        elif listnumber[mid] < searchValue:
            left = mid + 1
        else:
            right = mid - 1
    return -1

print(fn_binary_search(sorted([24,12,45,78,98,6]), 12))


def fn_recursive_binary_search(listnumber, searchvalue, left, right):

    if left > right:
        return -1
    mid = (left+right) // 2
    if listnumber[mid] == searchvalue:
        return mid
    elif listnumber[mid] > searchvalue:
        return fn_recursive_binary_search(listnumber,searchvalue,left,mid-1)
    else:
        return fn_recursive_binary_search(listnumber,searchvalue,mid+1,right)


list_numbers = [12,13,2,5,8,6,4,10]
list_numbers = sorted(list_numbers)
print(list_numbers)

print(fn_recursive_binary_search(list_numbers,12,0,len(list_numbers)-1))




def fn_binary_search_for_loop(listNumber, searchValue):
    left = 0
    right = len(listNumber) - 1
    for _ in range(len(listNumber)):  # Loop up to the size of the list
        if left > right:  # If the search space is empty
            break
        mid = (left + right) // 2
        if listNumber[mid] == searchValue:
            return mid
        elif listNumber[mid] < searchValue:
            left = mid + 1
        else:
            right = mid - 1
